# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=/Users/dylan/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#######################################
# BEGIN DYLAN'S ZSHRC
#######################################

# Run ssh-add at start of session to use keyring over password entry
# (this should be removed from a zshrc being used on a public system)
ssh-add --apple-use-keychain

#######################################
# PATH
#######################################

# Add Python bin (contains aws-cli and other pip3 installs)
# export PATH=~/Library/Python/3.6/bin:$PATH

# Add personal bin and local sbin
export PATH=~/bin:$PATH
export PATH="/usr/local/sbin:$PATH"

# Add hidden local bin
export PATH=/Users/dylan/.local/bin:$PATH

# Add LLVM bin
export PATH=/usr/local/opt/llvm/bin:$PATH

# Add go bin
export PATH=~/go/bin:$PATH

# Add Chrome devtools
export PATH=/Users/dylan/projects/chrome/depot_tools:$PATH

# Make default python the right one
# alias python=/usr/local/bin/python3
# alias python2=/usr/bin/python
# alias pip2=/usr/local/bin/pip
# alias pip=/usr/local/bin/pip3

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/dylan/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/dylan/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/dylan/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/dylan/google-cloud-sdk/completion.zsh.inc'; fi

#######################################
# ALIASES
#######################################

# Save two keystrokes in vain futile attempt to be uber leet while ensuring
# I can never use anyone else's computer. Also ensure I never realize the time
# saved here by including a long comment that took a minute to write.
alias v="vim"
alias g="git"

# Git commands I run way too often
alias ga="git add"
alias gst="git status"
function gland() {
  git merge --ff-only $1 &&
  git push &&
  git branch -d $1 &&
  git push origin :$1
}
function gupd() {
  git checkout master &&
  git pull &&
  git checkout - &&
  git rebase master &&
  git push -f
}
function groot() {
  cd $(git rev-parse --show-toplevel)
}

# Configure things fast
alias zcfg="vim ~/.zshrc"
alias vcfg="vim ~/.vimrc"
alias scfg="vim ~/.ssh/config"
alias gcfg="vim ~/.gitconfig"

# Avoid "helpful" autocorrection of filenames
alias cp='nocorrect cp'
alias mv='nocorrect mv'
alias rm='nocorrect rm'
alias mkdir='nocorrect mkdir'

# Always see hidden files
alias ls='ls -AG'

# Get to where we need to be
alias proj="cd ~/projects"
alias chron="cd ~/projects/chronicler"

# Run what we want there
alias dbuild="docker-compose build"
alias dtest="docker-compose up test"
alias dup="docker-compose up"
alias dupd="docker-compose up -d"

alias npmadd="npm install --save-exact"

alias pdb="python3 -m pdb"

alias pyinit="touch __init__.py"

# The next line updates PATH for Netlify's Git Credential Helper.
if [ -f '/Users/dylan/.netlify/helper/path.zsh.inc' ]; then source '/Users/dylan/.netlify/helper/path.zsh.inc'; fi
# The next line sources Haskell (ghcup)'s configurations
[ -f "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env" ] && source "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env"

# Set stuff up for NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Zsh hook to autorun nvm use on entering directories
# TODO(dylan): move this to hooks files
autoload -U add-zsh-hook
load-nvmrc() {
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
